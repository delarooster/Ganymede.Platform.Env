parameters:
- name: armTemplatePath
  type: string
  default: env/azuredeploy.json
- name: bicepTemplatePath
  type: string
  default: env/azuredeploy.bicep
- name: additionalArmParameters
  type: string
  default: |

- name: additionalBicepParameters
  type: string
  default: |
    
- name: azureSubscriptionSvcCxn
  type: string
- name: clientAffix
  type: string
- name: environmentName
  type: string
- name: debugDeployment
  type: boolean
  default: false
- name: deploymentMode
  type: string
  default: incremental
- name: conditionForDeployment
  type: object
  default: and(succeeded(), in(variables['Build.SourceBranch'], 'refs/heads/develop', 'refs/heads/master'))
- name: deployEnvInfrastructure
  type: boolean
  default: true
- name: env
  type: string
  default: Dv
  values:
  - Dv
  - Dp
  - Pp
  - Pd
  - Sd
  - Sg
  - Ts
- name: envIndex
  type: number
  default: 0
  values:
  - 0
  - 1
  - 2
  - 3
  - 4
  - 5
  - 6
  - 7
  - 8
  - 9
- name: projectAffix
  type: string
- name: qualifyProjectAffix
  type: boolean
  default: false
- name: variableGroup
  type: string
- name: vmImageLabel
  type: string
  default: windows-latest
- name: region
  type: string
- name: resourceGroup
  type: string
- name: resourceGroupLocation
  type: string
- name: env_descriptor
  type: string
- name: appId
  type: string
- name: deploymentSteps
  type: stepList
  default: []

###############################################################################

stages:
- stage: ${{ parameters.env }}${{ parameters.appId }}_${{ parameters.region }}_Deploy
  displayName: Deploy to ${{ parameters.env }}_${{ parameters.region }} stage
  dependsOn: Build

  variables:
    - group: ${{ parameters.variableGroup }}
  condition: ${{ parameters.conditionForDeployment }}

  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: ${{ parameters.environmentName }}
    pool:
      vmImage: ${{ parameters.vmImageLabel }}
    variables:
      deployBicep: false
      outPutVariables: ''
      todaysDate: ''
      todaysTime: ''
      ${{ if parameters.qualifyProjectAffix }}:
        qualifyProjectAffixArm: true
      ${{ if not(parameters.qualifyProjectAffix) }}:
        qualifyProjectAffixArm: false

    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self
            clean: true
          - ${{ if parameters.deployEnvInfrastructure }}:
            - task: AzureCLI@2
              displayName: Create resource group
              inputs:
                azureSubscription: ${{ parameters.azureSubscriptionSvcCxn }}
                scriptType: pscore
                scriptLocation: inlineScript
                inlineScript: |
                  az group create --name ${{ parameters.resourceGroup }} --location ${{ parameters.resourceGroupLocation }}

                  Write-Host "##vso[task.setvariable variable=todaysDate]$(Get-Date -format yyyyMMdd)"
                  Write-Host "##vso[task.setvariable variable=todaysTime]$(Get-Date -format HHmmss)"
          
            - task: Bash@3
              displayName: 'Template deploy type'
              inputs:
                targetType: 'inline'
                script: |
                  bicepPath=$(find $directory -type f -name "*.bicep")
                  if test -z "$bicepPath"
                  then 
                    echo "##vso[task.setvariable variable=deployBicep]false"
                    echo 'Deploying from ARM template'
                  else
                    echo "##vso[task.setvariable variable=deployBicep]true"
                    echo 'Deploying from BICEP template'
                    echo "Bicep file located at: $bicepPath"
                  fi 

            - task: AzureCLI@2
              condition: eq(variables.deployBicep, 'true') 
              displayName: Deploy BICEP Template
              inputs:
                azureSubscription: ${{ parameters.azureSubscriptionSvcCxn }}
                scriptType: bash
                scriptLocation: inlineScript
                powerShellIgnoreLASTEXITCODE: true
                inlineScript: |
                  az --version
                  if ${{ parameters.debugDeployment }}
                  then
                    az deployment group create \
                      --resource-group ${{ parameters.resourceGroup }} \
                      --name azuredeploy-$(todaysDate)-$(todaysTime) \
                      --template-file ${{ parameters.bicepTemplatePath }} \
                      --mode ${{ parameters.deploymentMode }} \
                      --debug \
                      --parameters \
                        clientAffix="${{ parameters.clientAffix }}" \
                        env="${{ parameters.env }}" \
                        env_descriptor="${{ parameters.env_descriptor }}" \
                        envIndex=${{ parameters.envIndex }} \
                        location=${{ parameters.resourceGroupLocation }} \
                        projectAffix="${{ parameters.projectAffix }}" \
                        region="${{ parameters.region }}" \
                        qualifyProjectAffix=$(qualifyProjectAffixArm) \
                        ${{ parameters.additionalBicepParameters }}
                  else
                    az deployment group create \
                      --resource-group ${{ parameters.resourceGroup }} \
                      --name azuredeploy-$(todaysDate)-$(todaysTime) \
                      --template-file ${{ parameters.bicepTemplatePath }} \
                      --mode ${{ parameters.deploymentMode }} \
                      --parameters \
                        clientAffix="${{ parameters.clientAffix }}" \
                        env="${{ parameters.env }}" \
                        env_descriptor="${{ parameters.env_descriptor }}" \
                        envIndex=${{ parameters.envIndex }} \
                        location=${{ parameters.resourceGroupLocation }} \
                        projectAffix="${{ parameters.projectAffix }}" \
                        region="${{ parameters.region }}" \
                        qualifyProjectAffix=$(qualifyProjectAffixArm) \
                        ${{ parameters.additionalBicepParameters }}
                  fi

            - task: AzureCLI@2
              condition: eq(variables.deployBicep, 'true') 
              displayName: Capture BICEP Outputs as Agent Variables
              name: 'bicepOutput'
              inputs:
                azureSubscription: ${{ parameters.azureSubscriptionSvcCxn }}
                scriptType: pscore
                scriptLocation: inlineScript
                inlineScript: |
                  $out = az deployment group show -g ${{ parameters.resourceGroup }} -n azuredeploy-$(todaysDate)-$(todaysTime) | convertfrom-json | foreach properties | foreach outputs
                  if($out -ne $null)
                  {
                      $provisionOutputs = [PSCustomObject]@{}
                      $out | Get-Member -MemberType NoteProperty | ForEach-Object {
                      $name = $_.name
                      $provisionOutputs | Add-Member -MemberType NoteProperty -Name $name -value $out.$name.value
                      Write-Host "##vso[task.setvariable variable=$($name);isOutput=true]$($out.$name.value)" 
                      }
                  }
                  else {
                      Write-Host "BICEP outputs are null"
                  }
                  
            - task: AzureResourceGroupDeployment@2
              condition: eq(variables.deployBicep, 'false')
              displayName: Deploy ARM Template
              inputs:
                azureSubscription: ${{ parameters.azureSubscriptionSvcCxn }}
                resourceGroupName: ${{ parameters.resourceGroup }}
                csmFile: $(Pipeline.Workspace)/${{ parameters.armTemplatePath }}
                overrideParameters: |
                  -clientAffix "${{ parameters.clientAffix }}"
                  -env "${{ parameters.env }}" 
                  -envIndex ${{ parameters.envIndex }}
                  -projectAffix "${{ parameters.projectAffix }}" 
                  -qualifyProjectAffix $(qualifyProjectAffixArm)
                  ${{ parameters.additionalArmParameters }}
                deploymentOutputs: provisionOutputs


          - ${{ each step in parameters.deploymentSteps }}:
            - ${{ step }}